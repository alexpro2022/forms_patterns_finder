services:

  mongo:
    image: mongo
    restart: always
    environment:
      #MONGO_INITDB_ROOT_USERNAME: ${USER}
      #MONGO_INITDB_ROOT_PASSWORD: ${PASSWORD}
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongodb_vol:/data/db      
    #env_file:
    # - ../.env

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017
      #ME_CONFIG_MONGODB_ADMINUSERNAME: ${USER}
      #ME_CONFIG_MONGODB_ADMINPASSWORD: ${PASSWORD}
      #ME_CONFIG_MONGODB_URL: ${DIALECT}://${USER}:${PASSWORD}@${HOST}:${PORT}      
    depends_on:
      - mongo
    #env_file:
    #  - ../.env      

  tests:
    container_name: container-tests
    build: 
      context: ..
      dockerfile: ./docker/test.Dockerfile
    command: bash -c "pytest"
    depends_on:
      - mongo
    env_file:
      - ../.env   

  app:
    build: 
      context: ..
      dockerfile: ./docker/dev.Dockerfile
    command: bash -c "python main.py"
    ports:
      - 8080:8080
    depends_on:
      - tests
    env_file:
      - ../.env  

volumes:
  mongodb_vol: